// Define global process settings
process {
    executor = 'local'        // Local execution
    container = true          // Enable container usage
    memory = '4 GB'           // Default memory allocation
    cpus = 2                  // Default number of CPUs
    time = '2h'               // Default maximum runtime
}
params {
    // ========================== Pipeline Mode ==========================
    mode = 'test' // Set mode: 'test' or 'actual'

    // ========================== Base Directories ==========================
    base_dir = "$baseDir"
    data_dir = "$baseDir/data"
    test_dir = "$data_dir/test"
    actual_dir = "$data_dir/actual"
    cache_dir = "$baseDir/cache"
    outdir = "$baseDir/output"

    // ========================== Dataset-Specific Inputs ==========================
    // Conditional paths for test/actual datasets
    reads = "${mode == 'test' ? test_dir : actual_dir}/fastp/trimmed_sample_*_{R1,R2}.fastq.gz"
	genome = "${mode == 'test' ? test_dir : actual_dir}/reference/genome.fa"
    variants = "${mode == 'test' ? test_dir : actual_dir}/reference/variants.vcf"
    denylist = "${mode == 'test' ? test_dir : actual_dir}/reference/denylist.bed"
	gtf_file = "${mode == 'test' ? test_dir : actual_dir}/reference/annotations.gtf"
	star_index_dir = "${mode == 'test' ? test_dir : actual_dir}/STAR_index"
    fasta_index = "${mode == 'test' ? test_dir : actual_dir}/genome.fa.fai"
    genome_dict = "${mode == 'test' ? test_dir : actual_dir}/genome.dict"
	filtered_vcf = "${mode == 'test' ? test_dir : actual_dir}/fixed_merged.filtered.recode.vcf.gz"
    filtered_vcf_index = "${mode == 'test' ? test_dir : actual_dir}/fixed_merged.filtered.recode.vcf.gz.tbi"
	

    // ========================== Test Mode-Specific Parameters ==========================
    test_data_dir = "$data_dir/test" // Directory for test data
	csv_file = "/home/kothai/cq-git-sample/Internship/data/test/samples_gpt.csv"
	test_data_genome = "ftp://ftp.ensembl.org/pub/current_fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.chromosome.22.fa.gz"
	test_data_gtf = 'https://github.com/kothaiRaja/data_sample/raw/refs/heads/main/grch38/annotations.gtf'
	test_data_known_indels  = 'https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/genome/vcf/mills_and_1000G.indels.vcf.gz'
	test_data_dbsnp  = 'https://github.com/nf-core/test-datasets/raw/modules/data/genomics/homo_sapiens/genome/vcf/dbsnp_146.hg38.vcf.gz'
	test_data_denylist = "https://github.com/kothaiRaja/data_sample/raw/refs/heads/main/grch38/denylist_chr22_to_22.bed"
    test_blacklist_fusion = "${params.test_data_dir}/ARRIBA/arriba_v2.4.0/database/blacklist_chr22.tsv"
    test_knownfusion = "${params.test_data_dir}/ARRIBA/arriba_v2.4.0/database/known_fusions_chr22.tsv"
//    test_protein_db_fusion = "${params.test_data_dir}/ARRIBA/arriba_v2.4.0/database/protein_domains_hg38_GRCh38_v2.4.0.gff3"
    
	
	// ========================== Actual Mode-Specific Parameters ==========================
    actual_data_dir = "$data_dir/actual" // Directory for actual data
    actual_urls = [
        genome: "https://example.com/genome.fa",
        variants: "https://example.com/variants.vcf",
        denylist: "https://example.com/denylist.bed",
        reads: "https://example.com/reads.tar.gz",
        csv: "https://example.com/reads.csv"
    ]

    // ========================== SnpEff Parameters ==========================
    genomedb = 'GRCh38.86' // Genome version for SnpEff database
    snpeff_db_dir = './snpEff/data' // Directory for SnpEff databases
    snpeff_jar_dir = './snpEff' // Directory for the SnpEff tool
	snpeff_config = '/mnt/snpEff/snpEff.config'
    scatter_count = 3 // Number of parallel tasks
	
	




}



profiles {
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.cacheDir = "${HOME}/singularity_containers/"
        docker.enabled = false
        podman.enabled = false
        shifter.enabled = false
        charliecloud.enabled = false
    }
}

process {

	
	
    // Configuration for download_reads process
    withName: download_reads {
        cpus = 2
        memory = '2 GB'
        
    }

    // Configuration for fastqc_raw process
    withName: fastqc_raw {
        cpus = 2
        memory = '4 GB'
        time = '2h'
    }
	//Configuration for Fastp
	withName: trim_reads {
        cpus = 2
        memory = '4 GB'
        time = '1h'
    }
	
	//Configuration for FASTA genome index
	withName: create_fasta_index {
        cpus = 1
        memory = '1 GB'
        time = '10m'
    }

	//Configuration for Genome Dictionary
    withName: create_genome_dict {
        cpus = 1
        memory = '2 GB'
        time = '10m'
    }

    //Configuration for star gonome index
	withName: create_star_index {
        cpus = 8
        memory = '16 GB'
        time = '2h'
    }
	
	withName: STAR_ALIGNMENT {
        cpus = 8
        memory = '16 GB'
        time = '2h'
    }
	
	withName: SAMTOOLS_SORT_INDEX {
    cpus = 4
    memory = '8 GB'
    time = '1h'
	}
	
	withName: GATK_MARK_DUPLICATES {
    cpus = 4
    memory = '12 GB'
    time = '1h 30m'
	}
	
	withName: SPLIT_NCIGAR_READS {
        cpus = 4
        memory = '12 GB'
        time = '2h'
    }
	
	withName: GATK_HAPLOTYPE_CALLER {
        cpus = 4                 // Number of threads for Pair-HMM computation
        memory = '16 GB'         // Amount of memory allocated
        time = '4h'              // Expected runtime
        errorStrategy = 'retry'  // Retry the process in case of failure
    }
}

timeline {
    enabled = true
    file = 'timeline.html'
	overwrite = true 
}

report {
    enabled = true
    file = 'report.html'
	overwrite = true 
}

trace {
    enabled = true
    file = 'trace.txt'
	overwrite = true 
}
